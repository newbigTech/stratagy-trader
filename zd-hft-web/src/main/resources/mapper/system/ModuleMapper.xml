<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zd.dao.system.ModuleDao">

	<select id="get" resultType="com.zd.domain.ModuleDO">
		select `id`,`name`,`parent_ids`,`perms`,`module_type`,`module_power`,`module_status`,`remark`,`del_flag`,`create_by`,`create_date`,`update_by`,`update_date` from zd_module where id = #{value}
	</select>

	<select id="getList" resultType="com.zd.domain.ModuleDO">
		select `id`,`name`,`parent_ids`,`perms`,`module_type`,`module_power`,`module_status`,`remark`,`del_flag`,`create_by`,`create_date`,`update_by`,`update_date` from zd_module
	</select>


	<select id="list" resultType="com.zd.domain.ModuleDO">
		select `id`,`name`,`parent_ids`,`perms`,`module_type`,`module_power`,`module_status`,`remark`,`del_flag`,`create_by`,`create_date`,`update_by`,`update_date` from zd_module
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="parentIds != null and parentIds != ''"> and parent_ids = #{parentIds} </if>
		  		  <if test="perms != null and perms != ''"> and perms = #{perms} </if>
		  		  <if test="moduleType != null and moduleType != ''"> and module_type = #{moduleType} </if>
		  		  <if test="modulePower != null and modulePower != ''"> and module_power = #{modulePower} </if>
		  		  <if test="moduleStatus != null and moduleStatus != ''"> and module_status = #{moduleStatus} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from zd_module
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="parentIds != null and parentIds != ''"> and parent_ids = #{parentIds} </if>
		  		  <if test="perms != null and perms != ''"> and perms = #{perms} </if>
		  		  <if test="moduleType != null and moduleType != ''"> and module_type = #{moduleType} </if>
		  		  <if test="modulePower != null and modulePower != ''"> and module_power = #{modulePower} </if>
		  		  <if test="moduleStatus != null and moduleStatus != ''"> and module_status = #{moduleStatus} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.zd.domain.ModuleDO">
		insert into zd_module
		(
			`id`, 
			`name`, 
			`parent_ids`, 
			`perms`, 
			`module_type`, 
			`module_power`, 
			`module_status`, 
			`remark`, 
			`del_flag`, 
			`create_by`, 
			`create_date`, 
			`update_by`, 
			`update_date`
		)
		values
		(
			#{id}, 
			#{name}, 
			#{parentIds}, 
			#{perms}, 
			#{moduleType}, 
			#{modulePower}, 
			#{moduleStatus}, 
			#{remark}, 
			#{delFlag}, 
			#{createBy}, 
			#{createDate}, 
			#{updateBy}, 
			#{updateDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.zd.domain.ModuleDO">
		update zd_module 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="parentIds != null">`parent_ids` = #{parentIds}, </if>
			<if test="perms != null">`perms` = #{perms}, </if>
			<if test="moduleType != null">`module_type` = #{moduleType}, </if>
			<if test="modulePower != null">`module_power` = #{modulePower}, </if>
			<if test="moduleStatus != null">`module_status` = #{moduleStatus}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateDate != null">`update_date` = #{updateDate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from zd_module where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from zd_module where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<select id="listModuleByUserId" resultType="com.zd.domain.ModuleDO">
		select distinct m.id,m.`name`,m.parent_ids,m.perms,m.alwaysused,m.create_by,m.module_power,m.module_type,m.module_status,m.remark from zd_module m
		LEFT JOIN zd_user_module um
		ON m.id=um.module_id
		<where>
			<if test="clientno != null and clientno != ''">um.clientno =#{clientno} </if>
            <if test="moduleType != null and moduleType != ''">AND m.module_type =#{moduleType} </if>
            <if test="modulePower != null and modulePower != ''">AND m.module_power=#{modulePower} </if>
		</where>
		<!--where um.user_id =#{id}-->
	</select>

	<select id="childlist" resultType="com.zd.domain.ModuleDO">
		SELECT z.id,z.`name` from zd_module z where z.parent_ids  = #{moduleId}
	</select>

</mapper>